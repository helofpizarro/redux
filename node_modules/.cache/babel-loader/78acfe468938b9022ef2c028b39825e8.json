{"ast":null,"code":"import produce from 'immer';\nexport default function cart() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.product.id);\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount += 1;\n          console.log(draft);\n        } else {\n          draft.push({ ...action.product,\n            amount: 1\n          });\n        }\n      });\n\n    case 'REMOVE_FROM_CART':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case 'UPDADE_AMOUNT':\n      {\n        console.log(action.amount);\n\n        if (action.amount <= 0) {\n          return state;\n        }\n\n        return produce(state, draft => {\n          const productIndex = draft.findIndex(p => p.id === action.id);\n\n          if (productIndex >= 0) {\n            draft[productIndex].amount = Number(action.amount);\n          }\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/bi004440/Desktop/Projetos/bootcamp/Redux/redux/src/store/modules/cart/reducer.js"],"names":["produce","cart","state","action","type","draft","productIndex","findIndex","p","id","product","amount","console","log","push","splice","Number"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,GAAiC;AAAA,MAAnBC,KAAmB,uEAAX,EAAW;AAAA,MAAPC,MAAO;;AAE5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAOJ,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC3B,cAAMC,YAAY,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,OAAP,CAAeD,EAA7C,CAArB;;AAGA,YAAGH,YAAY,IAAI,CAAnB,EAAqB;AACjBD,UAAAA,KAAK,CAACC,YAAD,CAAL,CAAoBK,MAApB,IAA8B,CAA9B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,SAHD,MAGO;AACHA,UAAAA,KAAK,CAACS,IAAN,CAAW,EACP,GAAGX,MAAM,CAACO,OADH;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAAX;AAKC;AACJ,OAdS,CAAd;;AAgBJ,SAAK,kBAAL;AACG,aAAOX,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC9B,cAAMC,YAAY,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAArC,CAArB;;AAGA,YAAIH,YAAY,IAAI,CAApB,EAAsB;AAClBD,UAAAA,KAAK,CAACU,MAAN,CAAaT,YAAb,EAA2B,CAA3B;AACH;AACD,OAPa,CAAd;;AAQH,SAAK,eAAL;AAAqB;AACbM,QAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACQ,MAAnB;;AACI,YAAGR,MAAM,CAACQ,MAAP,IAAiB,CAApB,EAAsB;AAClB,iBAAOT,KAAP;AACH;;AAEL,eAAOF,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC3B,gBAAMC,YAAY,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAArC,CAArB;;AAEA,cAAGH,YAAY,IAAI,CAAnB,EAAqB;AACrBD,YAAAA,KAAK,CAACC,YAAD,CAAL,CAAoBK,MAApB,GAA6BK,MAAM,CAACb,MAAM,CAACQ,MAAR,CAAnC;AACC;AACJ,SANa,CAAd;AAOJ;;AACJ;AACI,aAAOT,KAAP;AA1CR;AA6CH","sourcesContent":["import produce from 'immer'\n\nexport default function cart(state = [], action){\n  \n    switch(action.type){\n        case 'ADD_TO_CART':\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.product.id)\n                \n                \n                if(productIndex >= 0){\n                    draft[productIndex].amount += 1     \n                    console.log(draft)\n                } else {\n                    draft.push({\n                        ...action.product,\n                        amount: 1,\n                    })\n\n                    }\n                } \n            )\n        case 'REMOVE_FROM_CART':\n           return produce(state, draft => {\n            const productIndex = draft.findIndex(p => p.id === action.id)\n                \n\n            if (productIndex >= 0){\n                draft.splice(productIndex, 1)\n            }\n           })\n        case 'UPDADE_AMOUNT':{\n                console.log(action.amount)\n                    if(action.amount <= 0){\n                        return state\n                    }\n            \n                return produce(state, draft => {\n                    const productIndex = draft.findIndex(p => p.id === action.id)\n\n                    if(productIndex >= 0){\n                    draft[productIndex].amount = Number(action.amount) \n                    }\n                }) \n           }       \n        default:\n            return state\n          \n    }\n}"]},"metadata":{},"sourceType":"module"}
const {connectDbFromObject, connectDbFromExternal, startServer, getDbCopy, registerMiddleWare} = require("../server");
const axios = require("axios").default;
const assert = require("assert");
const {stripListUUID, stripUUID} = require("./util");
const {readJson, writeJson} = require("../fileops");

const URL = "http://localhost:3210";

const db_string = `{
  "users": [
    {
      "id": "7261378e-ed95-4691-ab01-d49694525903",
      "name": "user1",
      "applicationId": "7261378e-ed95-4691-ab01-d49694525908"
    },
    {
      "id": "7261378e-ed95-4691-ab01-d49694525904",
      "name": "user2",
      "applicationId": "7261378e-ed95-4691-ab01-d49694525909"
    }
  ],
  "admins": [
    {
      "id": "7261378e-ed95-4691-ab01-d49694525904",
      "name": "user1",
      "organizationId": "7261378e-ed95-4691-ab01-d49694525906"
    },
    {
      "id": "7261378e-ed95-4691-ab01-d49694525905",
      "name": "user2",
      "organizationId": "7261378e-ed95-4691-ab01-d49694525907"
    }
  ],
  "organizations": [
    {
      "id": "7261378e-ed95-4691-ab01-d49694525906",
      "name": "test-org-1"
    },
    {
      "id": "7261378e-ed95-4691-ab01-d49694525907",
      "name": "test-org-1"
    }
  ],
  "applications": [
    {
      "id": "7261378e-ed95-4691-ab01-d49694525908",
      "name": "application1",
      "organizationId": "7261378e-ed95-4691-ab01-d49694525906"
    },
    {
      "id": "7261378e-ed95-4691-ab01-d49694525909",
      "name": "application2",
      "organizationId": "7261378e-ed95-4691-ab01-d49694525907"
    }
  ]
}
`;

describe('server functions', function () {
    const dbPath = "./tests/external.db.json";

    let server;
    beforeEach(async () => {
        server = startServer(3210);
    });

    afterEach(function () {
        server.close();
    });

    it('should external db connect', function () {
        writeJson(dbPath, JSON.parse(db_string));
        connectDbFromExternal(dbPath);
        // console.log(getDbCopy());
        assert.deepStrictEqual(getDbCopy(), {
                users: [
                    {
                        id: '7261378e-ed95-4691-ab01-d49694525903',
                        name: 'user1',
                        applicationId: '7261378e-ed95-4691-ab01-d49694525908'
                    },
                    {
                        id: '7261378e-ed95-4691-ab01-d49694525904',
                        name: 'user2',
                        applicationId: '7261378e-ed95-4691-ab01-d49694525909'
                    }
                ],
                admins: [
                    {
                        id: '7261378e-ed95-4691-ab01-d49694525904',
                        name: 'user1',
                        organizationId: '7261378e-ed95-4691-ab01-d49694525906'
                    },
                    {
                        id: '7261378e-ed95-4691-ab01-d49694525905',
                        name: 'user2',
                        organizationId: '7261378e-ed95-4691-ab01-d49694525907'
                    }
                ],
                organizations: [
                    {id: '7261378e-ed95-4691-ab01-d49694525906', name: 'test-org-1'},
                    {id: '7261378e-ed95-4691-ab01-d49694525907', name: 'test-org-1'}
                ],
                applications: [
                    {
                        id: '7261378e-ed95-4691-ab01-d49694525908',
                        name: 'application1',
                        organizationId: '7261378e-ed95-4691-ab01-d49694525906'
                    },
                    {
                        id: '7261378e-ed95-4691-ab01-d49694525909',
                        name: 'application2',
                        organizationId: '7261378e-ed95-4691-ab01-d49694525907'
                    }
                ]
            }
        );


    });


    it('external db get op', async function () {
        connectDbFromExternal(dbPath);
        // console.log(getDbCopy());

        let res = await axios.get(URL + "/users");
        // console.log(res.data);

        assert.deepStrictEqual(res.data, [
            {
                id: '7261378e-ed95-4691-ab01-d49694525903',
                name: 'user1',
                applicationId: '7261378e-ed95-4691-ab01-d49694525908'
            },
            {
                id: '7261378e-ed95-4691-ab01-d49694525904',
                name: 'user2',
                applicationId: '7261378e-ed95-4691-ab01-d49694525909'
            }
        ]);

        res = await axios.post(URL + "/users", {
            name: 'user1',
            applicationId: '7261378e-ed95-4691-ab01-d49694525908'
        });

        // console.log(stripUUID(res.data));
        assert.deepStrictEqual(stripUUID(res.data), {
            name: 'user1',
            applicationId: '7261378e-ed95-4691-ab01-d49694525908'
        });

    });

    it('should db object crud', async function () {
        const db = {
            authors: [
                {id: 1, name: "dostoyevski"},
                {id: 2, name: "tolstoy"},

            ],
            books: [
                {id: 1, name: "suç ve ceza", authorId: 1},
                {id: 2, name: "anna karanina", authorId: 2}
            ]
        };

        connectDbFromObject(db);

        // console.log(getDbCopy());
        assert.deepStrictEqual(getDbCopy(), {
            authors: [{id: 1, name: 'dostoyevski'}, {id: 2, name: 'tolstoy'}],
            books: [
                {id: 1, name: 'suç ve ceza', authorId: 1},
                {id: 2, name: 'anna karanina', authorId: 2}
            ]
        });

        let res = await axios.get(URL + "/authors");
        // console.log(res.data);
        assert.deepStrictEqual(res.data, [{id: 1, name: 'dostoyevski'}, {id: 2, name: 'tolstoy'}]);

        res = await axios.get(URL + "/books");
        // console.log(res.data);
        assert.deepStrictEqual(res.data, [
            {id: 1, name: 'suç ve ceza', authorId: 1},
            {id: 2, name: 'anna karanina', authorId: 2}
        ]);


        res = await axios.delete(URL + "/books/1");
        // console.log(getDbCopy());
        // console.log(stripListUUID(getDbCopy().books));
        assert.deepStrictEqual(stripListUUID(getDbCopy().books), [{name: 'anna karanina', authorId: 2}])


        res = await axios.put(URL + "/authors/1", {name: "himmet abi"});
        // console.log(getDbCopy());
        assert.deepStrictEqual(getDbCopy(), {
            authors: [{id: 1, name: 'himmet abi'}, {id: 2, name: 'tolstoy'}],
            books: [{id: 2, name: 'anna karanina', authorId: 2}]
        });

    });
});

